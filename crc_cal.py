# -*- coding: utf-8 -*-

import crc_table


class CrcCal:
    def __init__(self):
        pass

    def crc8(self, octets):
        crc = 0 & 0x00FFFFFF
        try:
            for octet in octets:
                crc = crc ^ octet
                crc = crc_table.crc8_table[crc & 0x0FF]
        except:
            pass
        return crc & 0x00FFFFFF

    def crc16(self, octets):
        crc = 0 & 0x00FFFFFF
        try:
            for octet in octets:
                crc = crc ^ octet
                crc = (crc >> 8) ^ crc_table.crc16_table[crc & 0x0FF]
        except:
            pass
        return crc & 0x00FFFFFF

    def crc24(self, octets):
        crc = 0 & 0x00FFFFFF
        try:
            for octet in octets:
                crc = crc ^ octet
                crc = (crc >> 8) ^ crc_table.crc24_table[crc & 0x0FF]
        except:
            pass
        return crc & 0x00FFFFFF

    def crc32(self, octets):
        crc = 0 & 0x00FFFFFF
        try:
            for octet in octets:
                crc = crc ^ octet
                crc = ((crc >> 8) & 0x00FFFFFF) ^ crc_table.crc32_table[crc & 0x0FF]
        except:
            pass
        return crc


    def test(self):

        buf = [
            0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x44, 0x00, 0x02, 0x10, 0x00, 0x25,
            0x00, 0x28, 0x0c, 0x00, 0x10, 0x00, 0x02, 0x49,
            0x74, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x49,
            0x74, 0x36, 0x48, 0x55, 0x5c, 0x07, 0x7c, 0xef, 0x00, 0x81,
            0x00, 0x00, 0xe1, 0x88, 0x01, 0x31, 0x00, 0x00, 0x00, 0x00,
            0x10, 0x00, 0x03, 0x96, 0x64, 0x34, 0x00, 0x02, 0x03, 0x00,
            0x02, 0x00, 0x01, 0x01, 0x01, 0x00, 0x21, 0xc0, 0x80, 0x73,
            0x10, 0x27, 0x00, 0x00, 0xb6, 0xb5, 0xf7, 0x4f, 0xb7, 0x65,
            0x9a, 0xf8, 0x5b, 0x01, 0xef, 0xbe, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0xf5, 0xf0, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00]

        crc = self.crc24(buf)
        print(crc)
        return crc
